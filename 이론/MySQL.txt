#
mysql 터미널 명령어
mysql-ctl cli :
mysql 커맨드라인을 시작하는 명렁어.
---
##
mysql sql 문법
$ 일반적으로 sql문은 대문자를 쓰는게 원칙이다
CREATE DATABASE <name>;
ex)
CREATE DATABASE soap_shop;
$ 언더바를 쓰는 표기법을 스네이크 표기법이라 한다. (권장사항인듯하다.)
---
##
데이터베이스 확인하는 문법
SELECT database();
---
##
자료형 만드는 문법
CREATE TABLE tablename
(
    column_name data_type,
    column_name date_type
);
ex)
CREATE TABLE cats
(
    name VARCHAR(100),
    age INT
);
---
##
테이블 보는 문법
SHOW TABLES;
##
테이블 columns 보는 법
SHOW COLUMNS FROM <tablename>;
or
DESC <tablename>;
둘이 같진 않으나 비슷하다.
---
##
테이블 제거 문법
DROP TABLE <tablename>;
---
##
데이터 넣는 문법
INSERT INTO <tablename>(column_name, column_name)
VALUES (data, data);
ex)
INSERT INTO cats(name, age)
VALUES ('Jetson', 7);
위처럼 순서가 중요하다.
이름에는 이름 data, 나이에는 나이 data를 넣어줘야 한다.
~
여러개도 삽입 가능
INSERT INTO <tablename>(column_name, column_name)
VALUES   (data, data)
        ,(data, data)
        ,(data, data)
;
---
##
Null과 Not Null 문법
Null은 0이 아니다. 값이 없거나 알지 못한다는 뜻.
그래서 Null값이 없게 하려면 NOT NULL을 넣어야 한다.
NOT NULL에 값을 넣지 않았다면 INT 타입에는 0이 넣어지고 VARCHAR에는 빈 문자열이 들어가고 경고 로그가 뜬다.
ex)
CREATE TABLE <tablename>
(
    columns_name data_type NOT NULL
);
---
##
기본값 문법
값을 넣지 않았을 경우 들어갈 기본값을 지정하는 것이다.
CREATE TABLE <tablename>
(
    columns_name VARCHAR(20) DEFAULT 'no name provided',
    columns_name INT DEFAULT 99
);
~
NOT NULL과 DEFAULT 문법을 같이 쓰기도 한다.
이유는 NULL 값을 넣을 수도 있기 때문이다.
##
기본키 (Primary Key)
고유한 데이터 식별을 위한 키
기본키는 중복된 값을 가질 수 없다.
보통 id를 많이 사용한다. (ex. 1, 2, 3 ...)
주로 AUTO_INCREMENT를 넣어 자동으로 입력되게 사용한다. (자동으로 1씩 증가하게 하는 필드)
ex)
CREATE TABLE <tablename> (columns_name data_type NOT NULL AUTO_INCREMENT, PRIMARY KEY(columns_name));
or
CREATE TABLE <tablename> (columns_name data_type PRIMARY KEY NOT NULL AUTO_INCREMENT);
